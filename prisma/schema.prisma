// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth.js models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String         @id @default(cuid())
  email           String         @unique
  emailVerified   DateTime?
  name            String?
  image           String?
  hashedPassword  String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  accounts      Account[]
  sessions      Session[]
  subscriptions Subscription[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Application models
model Subscription {
  id              String       @id @default(cuid())
  userId          String
  name            String
  amount          Decimal      @db.Decimal(10, 2)
  currency        String       @default("JPY")
  billingCycle    BillingCycle @default(MONTHLY)
  nextBillingDate DateTime
  category        Category
  isActive        Boolean      @default(true)
  notes           String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([nextBillingDate])
}

enum BillingCycle {
  MONTHLY
  YEARLY
  QUARTERLY
  CUSTOM
}

enum Category {
  ENTERTAINMENT
  PRODUCTIVITY
  EDUCATION
  CLOUD_STORAGE
  MUSIC
  VIDEO
  NEWS
  FINANCE
  HEALTH
  OTHER
}